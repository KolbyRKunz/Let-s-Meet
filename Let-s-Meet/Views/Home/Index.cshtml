@{
    ViewData["Title"] = "Home Page";
}

<head>
    <meta charset='utf-8' />
    <!--Full Calendar-->
    <link href='~/lib/fullcalendar/main.css' rel='stylesheet' />
    <link rel="stylesheet" type="text/css" href="~/css/site.css" />
    <script src='~/lib/fullcalendar/main.js'></script>
    <!--Sweet Alert 2-->
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!--<script src="sweetalert2.all.min.js"></script>-->

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                headerToolbar: {
                    left: 'prev,next,title',
                    center: '',
                    right: 'today,dayGridMonth,timeGridWeek,timeGridDay'
                },

                events: '/api/displayUserEvents', //will need to pass in the userId later in the non-mock data call to query the database

                //editable:true,
                selectable:true,
                nowIndicator: true,

                eventClick: function(info){
                    var eventID = info.id;
                    var userID = 3; //This will need to be changed later with actual id

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if(result.isConfirmed)
                        {
                            info.event.remove();
                            $.ajax({  ///now we need to update the backend
                                url: '/api/removeUserEvent?userID=' + userID + '&eventID=' + eventID, //This will need to change to be for specific user and event
                                type: 'DELETE'
                            });
                        }
                    })
                },

                select: function(data){
                    console.log(data);
                    addEvent().then((values) => { //JS promise
                        console.log(values);//this is a JSON/object of stuff from the promise
                        var eventName = values.eventName
                        calendar.addEvent({
                            title: eventName,
                            start: data.start,
                            end: data.end
                        });
                        //TODO: need to update the database about this event
                        $.post('/api/addUserEvent',
                            {
                                //eventId: 'a', //Let the server handle id creation for database //is this needed? and how to get the correct id if so?
                                title: eventName,
                                start: data.start,
                                end: data.end,
                                userId: 3 //This will need to change to actual userID
                            }
                        )
                    })
                    .catch(error => console.log(error));
                },
                
            });
            calendar.render();
        });

    </script>
</head>

<h1>My Schedule</h1>

<div id='calendar' style="padding: 15px; background-color: #950741; border-radius: 30px"></div>

<script>
    async function addEvent(){
       const { value: formValues } = await Swal.fire({
            title: 'Event Info',
            html: //This does no input checking currently
                '<label>Event Name</label>' +
                '<input type="text" id="eventName" class="swal2-input">' +
                '<br/>' +
                '<label>Start Date</label>' +
                '<input type="date" id="startDate" class="swal2-input">' +
                '<br/>' +
                '<label>End Date</label>' +
                '<input type="date" id="endDate" class="swal2-input">' +
                '<br/>' +
                '<label>Start Time</label>' +
                '<input type="time" id="startTime" class="swal2-input">' +
                '<br/>' +
                '<label>End Time</label>' +
                '<input type="time" id="endTime" class="swal2-input">',
            focusConfirm: false,
            position: 'top-end',
            showCancelButton:true,
            preConfirm: () => {
                return {
                    eventName: $('#eventName').val(),
                    startDate: $('#startDate').val(),
                    endDate: $('#endDate').val(),
                    startTime: $('#startTime').val(),
                    endTime: $('#endTime').val()
                }
            }
        });
        return formValues;
    }
</script>
