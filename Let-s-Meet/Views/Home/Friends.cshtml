@{
    ViewData["Title"] = "Home Page";
}

<!--Sweet Alert 2-->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!--<script src="sweetalert2.all.min.js"></script>-->

<div class="text-left">
    <h2 class="description">Friends</h2>
    <hr />
</div>

<div>
    <button onclick="addFriend()" id="friendButton" class="btn btn-danger">Add Friend</button>
</div>

<h2 class="description">My friends</h2> <!--TODO: Figure out the layout of this page better-->
<hr />

<br />

<div id="friendList" style="display:flex;justify-content:flex-end;flex-direction:column;"></div> <!--Figure out how to get the css into the site.css-->


<script>
    fetch('../api/getUserFriends') //TODO: Needs to change to the actual API call
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            getFriendData(data);
        })
        .catch(function (e) {
            console.log("error in groups: " + e);
        })

    //TODO: This will greatly change when it's not mock data
    function getFriendData(data) { //will need to update what this does once we we know what the friend list will do in more depth, like what will clicking on a friend do
        var groupContainer = document.getElementById("friendList");
        for (var i = 0; i < data.length; i++) {
            var div = document.createElement("a");
            div.setAttribute('class', 'groupLink'); //Use this later for styling, once the site.css is connected better
            div.innerHTML = data[i].firstName + " " + data[i].lastName;
            groupContainer.appendChild(div);
        }
    }

    async function addFriendPopUp() {
        const { value: formValues } = await Swal.fire({
            title: 'Add Friend',
            html: //This does no input checking currently
                '<label>Enter email address</label>' +
                '<input type="text" id="friendEmail" class="swal2-input">' +
                '<br/>',
            focusConfirm: false,
            position: 'center',
            confirmButtonText: 'Add as friend',
            showCancelButton: true,
            preConfirm: () => { //TODO: only need days here because the user is picking the time frame they want it to occur from
                return {
                    friendEmail: $('#friendEmail').val(),
                }
            }
        });
        return formValues;
    }

    function addFriend() {
        addFriendPopUp().then((values) => {
            let url = ""; //TODO: this is where the api call to add a friend goes
            
            let data = {
                friendEmail: values.friendEmail
            };

            $.ajax({
                url: url,
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    console.log(response)
                    Swal.fire({
                        icon: 'success',
                        title: 'Friend Added!',
                    }).then((result) => {
                        location.reload();
                    })
                },
                error: function (response) {
                    console.log("something went wrong in friend creation ", response)
                    Swal.fire({
                        icon: 'error',
                        title: "Can't add as friend",
                    }).then((result) => {
                        location.reload();
                    })
                }
            })
        })
        .catch(error => console.log(error));
    }
</script>