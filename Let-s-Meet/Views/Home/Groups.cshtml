@{
    ViewData["Title"] = "Home Page";
}

<!--Sweet Alert 2-->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!--<script src="sweetalert2.all.min.js"></script>-->

<body>
    <div class="text-left">
        <h2 class="description">Groups</h2>
        <hr />
    </div>

    <div>
        <button onClick="createGroup()" id="createGroupBtn" class="btn btn-danger">Create Group</button>
    </div>

    <div id="groupList" style="display:flex;justify-content:flex-end;flex-direction:column;"></div> <!--Figure out how to get the css into the site.css-->
</body>


<script>
    fetch('../api/getUserGroups')
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            getUserGroupData(data);
        })
        .catch(function (e) {
            console.log("error in groups: " + e);
        })

    function getUserGroupData(data){ //TODO: This will have to be greatly change when no longer using mock data to display groups
        var groupContainer = document.getElementById("groupList");
        for(var i = 0; i < data.length; i++){
            var div = document.createElement("a");
            div.setAttribute('href', '../Group/Index'); //will need to make this related to the specific gorup and groupId for query
            div.setAttribute('class', 'groupLink'); //Use this later for styling on site.css
            div.innerHTML = data[i].groupName;
            groupContainer.appendChild(div);
        }
    }

    async function createGroupPopUp() {
        const { value: formValues } = await Swal.fire({
            title: 'Create Group',
            html: //This does no input checking currently
                '<div style="display:grid"><label>Group Name</label>' +
                '<input type="text" id="groupName" class="swal2-input">' +
                '<br/></div>'+
                '<label>Enter group members email (separate with a comma)</label>' +
                '<input type="text" id="members" class="swal2-input">' +
                '<br/></div>',
            focusConfirm: false,
            position: 'center',
            showCancelButton: true,
            preConfirm: () => {
                return {
                    groupName: $('#groupName').val(),
                    members: $('#members').val()
                }
            }
        });
        return formValues;
    }

    function createGroup() {
        createGroupPopUp().then((values) => {
            let data = {
                groupName: values.groupName.toString(),
                groupMembers: values.members //.split(",") //Change this if needed. Right now it's just passing the string to the api and letting c# separate the members by comma
            }
            console.log(data);
            
            //TODO: use ajax instead here?
            let url = "../Api/createGroup?groupName=" + values.groupName + "&groupMembers=" + values.members;
            
            console.log(url)

            //TODO: get ajax working with api calls, I can't get them to work I have to use the above option
            $.ajax({ //This needs to be improved upon, right now it's error 404
                url: url, //TODO: get ajax to work, right now the let url is doing the work not the ajax
                type: "POST",
                data: JSON.stringify(data),
                contentType: "application/json;carset=utf-8",
                dataType: "json",
                success: function(response){
                    //location.reload() //is this needed?
                    console.log(response);
                },
                error: function (error){
                    console.log(error)
                }
            })
        })
        .catch(error => console.log(error));
    }   
    
</script>
