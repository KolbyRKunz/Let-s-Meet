@{
    ViewData["Title"] = "Groups";
}

<!--Sweet Alert 2-->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!--<script src="sweetalert2.all.min.js"></script>-->

<body>
    <div class="text-left">
        <h2 class="description">Groups</h2>
        <hr />
    </div>

    <div>
        <button id="createGroupBtn" class="btn btn-danger">Create Group</button>
    </div>

    <!--TODO: Style this better-->
    <div id="groupModal" class="modal"> 
        <div class="modal-content">
            <div class="modal-header">
                <h1>Create Group</h1>
                <span class="close">&times;</span>
            </div>
            <div id="modalBody">
                <h4>Group Name</h4>
                <input type="text" class="modalItem " id="groupName" placeholder="Group Name" />
                <span>Add member from friends list</span>
            </div>
            <span id="addMember" class="modalItem">+ Add Member</span>
            <div class="modal-footer">
                <span class="close">Create</span>
            </div>
        </div>
    </div>

    <h2 class="description">My groups</h2> <!--TODO: Figure out the layout of this page better-->
    <hr />
    <div id="groupList" style="display:flex;justify-content:flex-end;flex-direction:column;"></div> <!--Figure out how to get the css into the site.css-->
</body>


<script>
    fetch('/GroupModels/GetGroups') 
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            getUserGroupData(data);
        })
        .catch(function (e) {
            console.log("error in groups: " + e);
        })

    function getUserGroupData(data){
        console.log(data)
        var groupContainer = document.getElementById("groupList");
        for(var i = 0; i < data.length; i++){
            var div = document.createElement("a");
            div.setAttribute('href', '../Group/Index?joinCode=' + data[i].joinCode);
            div.setAttribute('class', 'groupLink');
            div.innerHTML = data[i].groupName;
            groupContainer.appendChild(div);
        }
    }



    /*TODO: this modal stuff needs improvement, I'm just trying to get something out there and working
        This should go in a function, but I'm having issues with the onclick and needing to click
        things twice in order for it to appear when I don't put it in a function, it behaves as needed
    */
    var modal = document.getElementById('groupModal');
    var btn = document.getElementById('createGroupBtn');
    var close = document.getElementsByClassName('close')[0];
    var submission = document.getElementsByClassName('close')[1];
    var addMember = document.getElementById('addMember');

    btn.onclick = function () {
        modal.style.display = "block";
    }
    close.onclick = function () {
        modal.style.display = "none";
        document.getElementById("groupName").value = ""; 
        location.reload(); //TODO: figure out better way to clear user input
    }
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
            document.getElementById("groupName").value = ""; 
            location.reload(); //TODO: figure out better way to clear user input
        }
    }

    addMember.onclick = function() {
        /*This is where the work of adding another select tag goes, adding another member*/
        /*https://stackoverflow.com/questions/17001961/how-to-add-drop-down-list-select-programmatically
        What I followed for hard coded data, it should hopefully translate somewhat for the actual data*/
        var selector = document.getElementById("modalBody");
        fetch('/FriendsModels/GetFriends')
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            console.log(data)

            var div = document.createElement("div");
            div.classList.add("memberContainer");

            var selectList = document.createElement("select");
            selectList.classList.add("friends");
            selector.appendChild(selectList);
            for (var i = 0; i < data.length; i++) {
                var option = document.createElement("option");
                option.value = data[i].userID;
                option.text = data[i].firstName;
                selectList.appendChild(option);
            }
            var remove = document.createElement("span");
            remove.classList.add("remove");
            remove.innerHTML = "&times Remove";
            remove.onclick = (e) => {
                e.currentTarget.parentNode.remove()
            }
            selector.appendChild(remove);

            div.appendChild(selectList)
            div.appendChild(remove)
            selector.appendChild(div)

        })
        .catch(function (e) {
            console.log("error in group creation: " + e);
        })
    }

    submission.onclick = function(){
        modal.style.display = "none";
        var groupName = document.getElementById("groupName").value;
        //Don't allow a group with no name
        if(groupName == "")
        {
            Swal.fire({
                icon: 'error',
                title: 'Enter Group name'
            })
            return;
        }
        document.getElementById("groupName").value = ""; //Clear the user inputs, saved in variable already
        var select = document.getElementsByClassName('friends');
        var members = []; 
        for (var i = 0; i < select.length; i++)
        {
            /*IMPORTANT: This is to allow users to create a group even if they don't have friends, but click add member 
                This will still let them create the group, but with no friend members after clicking add member*/
            if(select[i].options[select[i].selectedIndex] == undefined)
            {
                break;
            }
            var text = select[i].options[select[i].selectedIndex].value;
            members.push(parseInt(text));
        }
        console.log(groupName);
        console.log(members);
        
        let data = {
            name: groupName,
            friendIds: members,
        }
        
        let url = "/GroupModels/CreateGroup";

        $.ajax({
            url: url,
            type: "POST",
            data: JSON.stringify(data),
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                console.log(response);
                Swal.fire({
                    icon: 'success',
                    title: "Group Created!",
                }).then((result) => {
                    location.reload();
                })
            },
            error: function (error) {
                Swal.fire({
                    icon: 'error',
                    title: "Error with group creation",
                }).then((result) => {
                    console.log(error);
                    location.reload();
                })
            }
        })
    }
    
</script>
