<link rel="stylesheet" type="text/css" href="~/css/site.css" />
<!--Sweet Alert 2-->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!--<script src="sweetalert2.all.min.js"></script>-->


<head>
    <meta charset='utf-8' />
    <link href='~/lib/fullcalendar/main.css' rel='stylesheet' />
    <link rel="stylesheet" type="text/css" href="~/css/site.css" />
    <script src='~/lib/fullcalendar/main.js'></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                headerToolbar: {
                    left: 'prev,next,title',
                    center: '',
                    right: 'today,dayGridMonth,timeGridWeek,timeGridDay'
                },

                height: "auto",

                events: '/api/getGroupEvents', //TODO: will need to call correct api controller to get group event, this is a hard coded data call
                
                //IMPORTANT: this is doing the displaying of the location since it's not a default fullcalendar attribute
                eventDidMount: function (info) {
                    //Need to make sure it's not month view because this won't work there
                    if (info.view.type != 'dayGridMonth') //This doesn't work on month view
                    {
                        let location = document.createElement('div');
                        location.innerHTML = info.event.extendedProps.location;
                        info.el.querySelector('.fc-event-title-container').append(location);
                    }
                },
                
                nowIndicator: true
            });
            calendar.render();
        });

    </script>
</head>


<div>
    <h1 class="description" id="groupName">Group Calendar</h1>
    <hr />
</div>


<div style="padding:1%">
    <button onClick="createMeeting()" id="letsMeetButton" class="btn btn-danger">Let's Meet!</button>
    <button onClick="groupLink()" class="btn btn-danger">Get Group Join Link</button>
    <!--<button onClick="leaveGroup()" class="btn btn-danger">Leave Group</button>-->
    <!--<button onClick="addMember()" class="btn btn-danger">Add Member</button>-->
</div>

<div id="groupInfo">
    <div class="calendarContainer" id="groupCalendar">
        <div id='calendar' style="padding: 15px; background-color: #950741; border-radius: 30px"></div>
    </div>
    
    <div>
        <img id="QrCode" src = @ViewBag.image />
    </div>

    <div id="groupMembers">
        <h3>Group Members</h3>
    </div>
</div>


<script>
    //TODO: figure out more of what data needs to be passed to the back end for the Let's Meet button
    async function createMeetingPopUp() {
        const { value: formValues } = await Swal.fire({
            title: 'Meeting Reason',
            html: //This does no input checking currently
                //'<label>Event Reason</label>' +
                '<div style="display:grid"><input type="text" id="eventName" class="swal2-input">' +
                '<br/></div>' +
                '<div style="display:grid"><label>Location</label>' +
                '<input type="text" id="location" class="swal2-input">' +
                '<br/></div>' +
                '<div style="display:grid"><label>Start Date</label>' +
                '<input type="date" id="startDate" class="swal2-input">' +
                '<br/></div>' +
                '<div style="display:grid"><label>End Date</label>' +
                '<input type="date" id="endDate" class="swal2-input">' +
                '<br/></div>' +
                '<div style="display:grid"><label>Meeting Length (in hours)</label>' + //TODO: how does the backend want this data to be sent, minutes or hours? Does it also need timezone info?
                '<input type="text" id="meetingLength" class="swal2-input">' +
                '<br/></div>',
            focusConfirm: false,
            position: 'top-end',
            showCancelButton: true,
            preConfirm: () => { //TODO: only need days here because the user is picking the time frame they want it to occur from
                return {
                    eventName: $('#eventName').val(),
                    startDate: $('#startDate').val(),
                    endDate: $('#endDate').val(),
                    meetingLength: $('#meetingLength').val(),
                    location: $('#location').val()
                }
            }
        });
        return formValues;
    }

    function createMeeting() {
        createMeetingPopUp().then((values) => {
            console.log(values);
            //TODO: figure out more of what data needs to be passed to the back end for the Let's Meet button, B5 task, like is time zone needed?
            //TODO: this will need the API call that finds the open meeting time to display on the calendar

            let url = "" //TODO: add api call to meeting creation

            var meetingData = {
                meetingReason: values.eventName,
                startDate: values.startDate,
                endDate: values.endDate,
                meetingLength: values.meetingLength, //IMPORTANT: this should be in hours, does it need to be in a different form?
                location: values.location
                //TODO: is there more data need from the front to back for this task?
            }

            $.ajax({
                type: 'POST',
                url: url,
                dataType: 'json',
                data: meetingData
            })
            .done(function () {
                location.reload() //This is so the calendar display will refresh with the new event on the calendar hopefully
            })
            .fail(function (error) {
                console.log("something went wrong with meeting creation")
                console.log(error)
            });

        })
        .catch(error => console.log(error));
    }

    function leaveGroup(){
        Swal.fire({
            title: 'Are you sure you wish to leave the group?',
            text: "You won't be able to rejoin without an invite!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, leave group!'
        }).then((result) => {
            if (result.isConfirmed) {
                //TODO: this will need the api controller call that has the user leave the group, can be done later once everything else is working also
                
                let url = "" //TODO: add api call to leave group
                let params = new URLSearchParams(location.search);
                var groupData = {
                    groupId: params.get('groupId')
                }

                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: 'json',
                    data: groupData
                })
                .done(function () {
                    location.replace("/Home/Groups")
                })
                .fail(function (error) {
                    console.log("something went wrong with leaving the group")
                    console.log(error)
                });
            }
        })
    }
    
    document.body.onload = function() {
        let params = new URLSearchParams(location.search);
        var groupName = document.getElementById("groupName");
        groupName.innerHTML = params.get('groupName') + " Group Calendar"

    }

    //TODO: this api call will need to change as well to the correct controller
   fetch('../api/getGroupMembers?groupId=' + @ViewBag.groupID)
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            getGroupMembers(data);
        })
        .catch(function (e) {
            console.log("error in groups: " + e);
        })

    function getGroupMembers(data) {
        //console.log(data)
        var groupContainer = document.getElementById("groupMembers");
        for (var i = 0; i < data.length; i++) {
            var div = document.createElement("li");
            div.setAttribute('class', 'members'); //Use this later for styling
            div.innerHTML = data[i].member;
            groupContainer.appendChild(div);
        }
    }

    //IMPORTANT: this can be commented out for demo purposes later on
    function addMember() {
        Swal.fire({
            title: 'Enter email address of new member',
            input: 'text',
            icon: 'question',
            confirmButtonText: 'Add Member',
            showCancelButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                console.log(result)
                //TODO: work of adding another group member to a already created group, if we have time, this can be commented out later for demo purposes
                let url = "" //TODO: add api call to add member

                var memberData = {
                    memberEmail: result.value
                }

                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: 'json',
                    data: memberData
                })
                .done(function () {
                    location.reload() //This is so the calendar display will refresh with the new member on the page hopefully
                })
                .fail(function (error) {
                    console.log("something went wrong with adding new member")
                    console.log(error)
                });
            }
        })
    }

    /*IMPORTANT TODO: This code could potentially break on AWS because of the JS location it hopefully shouldn't
        But this is to remind that this area could be the problem*/
    function groupLink(){
        console.log(location);
        var origin = location.origin;
        var url = "@ViewBag.fullUrlRedirect";
        console.log(url);
        Swal.fire({
            icon: 'success',
            title: url,
            text: "Copy the link above to give to someone to join the group"
        })
    }
</script>