<link rel="stylesheet" type="text/css" href="~/css/site.css" />
<!--Sweet Alert 2-->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!--<script src="sweetalert2.all.min.js"></script>-->


<head>
    <meta charset='utf-8' />
    <link href='~/lib/fullcalendar/main.css' rel='stylesheet' />
    <link rel="stylesheet" type="text/css" href="~/css/site.css" />
    <script src='~/lib/fullcalendar/main.js'></script>
    <script>

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                headerToolbar: {
                    left: 'prev,next,title',
                    center: '',
                    right: 'today,dayGridMonth,timeGridWeek,timeGridDay'
                },

                height: "auto",

                events: '/api/getGroupEvents', //TODO: will need to call correct api controller to get group event, this is a hard coded data call
                
                //IMPORTANT: this is doing the displaying of the location since it's not a default fullcalendar attribute
                eventDidMount: function (info) {
                    //Need to make sure it's not month view because this won't work there
                    if (info.view.type != 'dayGridMonth') //This doesn't work on month view
                    {
                        let location = document.createElement('div');
                        location.innerHTML = info.event.extendedProps.location;
                        info.el.querySelector('.fc-event-title-container').append(location);
                    }
                },
                
                nowIndicator: true
            });
            calendar.render();
        });

    </script>
</head>


<div>
    <h1 class="description" id="groupName">Group Calendar</h1>
    <hr />
</div>

<div style="padding:1%">
    <button id="createMeetingBtn" class="btn btn-danger">Let's Meet!</button>
    <button onClick="groupLink()" class="btn btn-danger">Get Group Join Link</button>
    <!--<button onClick="leaveGroup()" class="btn btn-danger">Leave Group</button>-->
    <!--<button onClick="addMemberViaEmail()" class="btn btn-danger">Add Member with Email</button>-->
</div>

<div id="groupInfo">
    <div class="calendarContainer" id="groupCalendar">
        <div id='calendar' style="padding: 15px; background-color: #950741; border-radius: 30px"></div>
    </div>
    
    <div>
        <div class="groupItems">
            <h5 class="qrCapton">QRcode to join group from mobile</h5>
            <img id="QrCode" src = @ViewBag.image />
        </div>

        <div class="groupItems"  id="groupMembers">
            <h3>Group Members</h3>
        </div>
    </div>
</div>

 <!--TODO: Style this better-->
    <div id="meetingCreationModal" class="modal"> 
        <div class="modal-content">
            <div class="modal-header">
                <h1>Let's Meet!</h1>
                <span class="close">&times;</span>
            </div>
            <div id="modalBody">
                <h4>Reason for meeting</h4>
                <input type="text" class="modalItem " id="meetingReason" placeholder="Reason" />
                <h4>Location</h4>
                <input type="text" class="modalItem " id="meetingLocation" placeholder="Location" />
                <h4>How soon do you want to hold the meeting?</h4>
                <select id="meetingDaysOut">
                    <option value="1">Within 1 day from now</option>
                    <option value="2">Within 2 days from now</option>
                    <option value="3">Within 3 days from now</option>
                    <option value="4">Within 4 days from now</option>
                    <option value="5">Within 5 days from now</option>
                    <option value="6">Within 6 days from now</option>
                    <option value="7">Within 7 days from now</option>
                </select>
                <!--TODO: this can be removed if we don't want the select, I can just note that it's only hour long meetings for now-->
                <h4>Length of the meeting</h4>
                <select id="meetingLength">
                    <option value="1">1 hour</option>
                </select>
            </div>
            <div class="modal-footer">
                <span class="close" data-bs-toggle="modal" data-bs-target="#selectTimeModal" data-bs-dismiss="modal">Let's Meet!</span>
            </div>
        </div>
    </div>

<script>
    /*NOTE: I decided to use a modal here instead of swal2 since a modal has better support for multiple inputs
        I wanted to avoid the select calendar problems from the Home/Index.cshtml swal in addEvent */
    var createMeetingModal = document.getElementById('meetingCreationModal');
    var createMeetingBtn = document.getElementById('createMeetingBtn');
    var close = document.getElementsByClassName('close')[0];
    var submission = document.getElementsByClassName('close')[1];

    createMeetingBtn.onclick = function () {
        createMeetingModal.style.display = "block";
    }
    close.onclick = function () {
        createMeetingModal.style.display = "none";
        document.getElementById("meetingReason").value = ""; //Clear the user inputs, saved in variable already
        document.getElementById("meetingLocation").value = "";
        location.reload(); //TODO: figure out better way to clear user input
    }
    window.onclick = function (event) {
        if (event.target == createMeetingModal) {
            createMeetingModal.style.display = "none";
            document.getElementById("meetingReason").value = ""; //Clear the user inputs, saved in variable already
            document.getElementById("meetingLocation").value = "";
            location.reload(); //TODO: figure out better way to clear user input
        }
    }

    submission.onclick = function () {
        createMeetingModal.style.display = "none";
        var reason = document.getElementById("meetingReason").value;
        var location = document.getElementById("meetingLocation").value;
        document.getElementById("meetingReason").value = ""; //Clear the user inputs, saved in variable already
        document.getElementById("meetingLocation").value = "";
        var daysSelect = document.getElementById('meetingDaysOut');
        var days = daysSelect.options[daysSelect.selectedIndex].value;
        var lengthSelect = document.getElementById('meetingLength');
        var length = lengthSelect.options[lengthSelect.selectedIndex].value;
        console.log(reason);
        console.log(location);
        console.log(days);
        console.log(length);
    }


    document.body.onload = function() {
        var groupName = document.getElementById("groupName");
        groupName.innerHTML = "@ViewBag.GroupName" + " Group Calendar";
    }

    //TODO: this api call will need to change as well to the correct controller
   fetch('../api/getGroupMembers?groupId=' + @ViewBag.groupID)
        .then(function (response) {
            return response.json();
        })
        .then(function (data) {
            getGroupMembers(data);
        })
        .catch(function (e) {
            console.log("error in groups: " + e);
        })

    function getGroupMembers(data) {
        //console.log(data)
        var groupContainer = document.getElementById("groupMembers");
        for (var i = 0; i < data.length; i++) {
            var div = document.createElement("li");
            div.setAttribute('class', 'members'); //Use this later for styling
            div.innerHTML = data[i].member;
            groupContainer.appendChild(div);
        }
    }

    /*IMPORTANT TODO: This code could potentially break on AWS because of the JS location it hopefully shouldn't
        But this is to remind that this area could be the problem*/
    function groupLink() {
        /*console.log(location);
        var origin = location.origin;*/
        var url = "@ViewBag.fullUrlRedirect";
        console.log(url);
        Swal.fire({
            icon: 'success',
            title: url,
            text: "Copy the link above to give to someone to join the group"
        })
    }

    //IMPORTANT: this can be commented out for demo purposes later on
    /*function addMemberViaEmail() {
        Swal.fire({
            title: 'Enter email address of new member',
            input: 'text',
            icon: 'question',
            confirmButtonText: 'Add Member',
            showCancelButton: true,
        }).then((result) => {
            if (result.isConfirmed) {
                console.log(result)
                //TODO: work of adding another group member to a already created group, if we have time, this can be commented out later for demo purposes
                let url = "" //TODO: add api call to add member

                var memberData = {
                    memberEmail: result.value
                }

                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: 'json',
                    data: memberData
                })
                .done(function () {
                    location.reload() //This is so the calendar display will refresh with the new member on the page hopefully
                })
                .fail(function (error) {
                    console.log("something went wrong with adding new member")
                    console.log(error)
                });
            }
        })
    }*/

    /*function leaveGroup() {
        Swal.fire({
            title: 'Are you sure you wish to leave the group?',
            text: "You won't be able to rejoin without an invite!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, leave group!'
        }).then((result) => {
            if (result.isConfirmed) {
                //TODO: this will need the api controller call that has the user leave the group, can be done later once everything else is working also

                let url = "" //TODO: add api call to leave group
                let params = new URLSearchParams(location.search);
                var groupData = {
                    groupId: params.get('groupId')
                }

                $.ajax({
                    type: 'POST',
                    url: url,
                    dataType: 'json',
                    data: groupData
                })
                    .done(function () {
                        location.replace("/Home/Groups")
                    })
                    .fail(function (error) {
                        console.log("something went wrong with leaving the group")
                        console.log(error)
                    });
            }
        })
    }*/

</script>